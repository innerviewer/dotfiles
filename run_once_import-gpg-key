#!/usr/bin/env bash
set -euo pipefail

BW_ITEM_ID="772ca4cd-9eac-48da-8a90-b37b00a8b744"
KEYID="66E3AC6A71C8CC76FBF5ACF2E085BE884590FBB8"

read -p "🔐 Import the GPG key from Bitwarden? (y/N): " confirm
[[ ${confirm,,} == "y" ]] || exit 0

echo "🔐 Importing GPG key from Bitwarden...: "

export BW_SESSION=$(bw unlock --raw)

# Ensure Bitwarden CLI is unlocked
if ! bw status | grep -q '"unlocked"'; then
  echo "❌ Bitwarden is locked. Please run: bw unlock"
  exit 1
fi

# Retrieve the key content (notes field)
GPG_KEY_CONTENT=$(bw get notes "$BW_ITEM_ID")

if [ -z "$GPG_KEY_CONTENT" ]; then
  echo "❌ Failed to retrieve GPG key from Bitwarden."
  exit 1
fi

echo "✅ Retrieved GPG key from Bitwarden."

# Check if key already exists
if gpg --list-secret-keys "$KEYID" >/dev/null 2>&1; then
  echo "✅ GPG key for $KEYID already exists. Skipping import."
else
  echo "$GPG_KEY_CONTENT" | gpg --import
  echo "✅ GPG key imported."
fi

echo -e "trust\n5\ny\nquit" | gpg --command-fd 0 --edit-key "$KEYID" trust
echo "✅ GPG key trusted (level 5)."

# Configure git signing
git config --global commit.gpgsign true
git config --global tag.gpgSign true

echo "✅ Git configured for GPG signing."
echo "🎉 All done!"

